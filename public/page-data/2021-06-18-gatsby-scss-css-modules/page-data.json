{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2021-06-18-gatsby-scss-css-modules",
    "result": {"data":{"markdownRemark":{"html":"<p>Gatsbyで作ったサイトのスタイルを書く時は、LessとSassの両方が使えます。今回はSassを使ってスタイリングする際の使い方を説明します。またレスポンシブサイトを作る上でのブレイクポイントの決め方も書いています。</p>\n<h4>プラグインを入れる</h4>\n<p>使用するプラグインは以下の通り。</p>\n<pre><code>yarn add node-sass gatsby-plugin-sass\n</code></pre>\n<p>そしてインストールが出来たら<code>Gatsby-config.js</code>に追記します。</p>\n<pre><code>plugins: [\n`gatsby-plugin-sass`,\n]\n</code></pre>\n<h4>stylesファイルをつくる</h4>\n<p>次は実際にScssファイルを使っていきましょう。まずはスタイルのファイルを格納するフォルダ<code>styles</code>を<code>src</code>直下に作成します。私の場合はこんな感じのフォルダ構成です。</p>\n<pre><code>/\n└─ src/\n    └─ styles/\n        ├─ common/\n        │   ├─ _base.scss\n        │\t\t├─ _variable.scss\n        └─ components/\n        \t\t├─ header.module.scss\n        \t\t├─ footer.module.scss\n       \n</code></pre>\n<p>サイト全体に影響するフォントや変数の指定は、<code>base.scss</code>, <code>variable.scss</code>に書いています。</p>\n<p>モジュールごとのscssは<code>***.module.scss</code>というファイル名でつくり各コンポーネントやページに合わせてつくります。</p>\n<p>そしてこれらをインポートするメインのscssファイルを作ります。<code>index.scss</code>ファイルをつくり、ここで<code>@import</code>してscssを呼び出しています。以下のようになります。</p>\n<pre><code>@charset 'utf-8';\n\n// base\n@import '../styles/common/_base.scss';\n@import '../styles/common/_variable.scss';\n\n// component\n@import '../styles/components/header.module.scss';\n@import '../styles/components/footer.module.scss';\n</code></pre>\n<p>このファイルは<code>src/components/</code>の中に入れて、layout.jsで<code>import \"../components/index.scss\";</code>とスタイルを参照しています。</p>\n<p>別のやり方では、gatsby-browser.jsに@importするやり方もあるようですが、私の場合はそれだとスタイルが反映されなかったのでこの方法にしました。</p>\n<p>これでScssの使い方は一通り完了です。せっかくなのでScssでレスポンシブサイトを作れるようにブレイクポイントを設定していきましょう。</p>\n<h4>変数でメディアクエリを定義する</h4>\n<p>横幅を決めるブレイクポイントを定義していきます。</p>\n<pre><code>$breakpoints: (\n  'xs': 'screen and (min-width: 320px)',\n  'sm': 'screen and (min-width: 520px)',\n  'md': 'screen and (min-width: 960px)',\n  'lg': 'screen and (min-width: 1200px)',\n  'xl': 'screen and (min-width: 1400px)',\n  ) !default;\n  \n</code></pre>\n<p>つづいて、上で定義したメディアクエリをmixinを使って呼び出せるようにします。</p>\n<pre><code> @mixin mq($breakpoint: md) {\n    @media #{map-get($breakpoints, $breakpoint)} {\n       @content;\n      }\n    }\n</code></pre>\n<p>こうすることで、スマホ、タブレット、pcのそれぞれのサイズのときの見え方を変更することができます。使い方はこんな感じ。</p>\n<pre><code>.header {\n  padding: 0 24px;\n  @include mq() { // 初期値のmd:960pxになる\n    padding: 0 64px;\n  }\n}\n</code></pre>\n<p>Sassの変数とmixinの書き方は以下の記事を参考にしました。</p>\n<p><a href=\"https://www.tam-tam.co.jp/tipsnote/html_css/post10708.html\">Sassの変数とmixinで変更に強いメディアクエリをつくる</a></p>\n<p>そしてブレイクポイントの定義に関しては以下の記事が大変参考になります。</p>\n<p><a href=\"https://hashimotosan.hatenablog.jp/entry/2020/12/06/182327\">【図解で納得】レスポンシブデザインのブレイクポイントの細かすぎる新解釈2021最新版</a></p>","frontmatter":{"title":"GatsbyJSでCSS modulesを使ってSass/Scssを書く","date":"Jun 18 2021","category":["Tech"],"slug":"2021-06-18-gatsby-scss-css-modules","tags":["GatsbyJS"],"emoji":null},"tableOfContents":"<ul>\n<li><a href=\"#%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B\">プラグインを入れる</a></li>\n<li><a href=\"#styles%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\">stylesファイルをつくる</a></li>\n<li><a href=\"#%E5%A4%89%E6%95%B0%E3%81%A7%E3%83%A1%E3%83%87%E3%82%A3%E3%82%A2%E3%82%AF%E3%82%A8%E3%83%AA%E3%82%92%E5%AE%9A%E7%BE%A9%E3%81%99%E3%82%8B\">変数でメディアクエリを定義する</a></li>\n</ul>"}},"pageContext":{"slug":"2021-06-18-gatsby-scss-css-modules"}},
    "staticQueryHashes": ["1251827014","4173678595"]}