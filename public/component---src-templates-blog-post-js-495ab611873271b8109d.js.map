{"version":3,"file":"component---src-templates-blog-post-js-495ab611873271b8109d.js","mappings":"iSACWA,EAAa,kCACbC,EAAa,kC,SCmBxB,EAhBe,WACb,OACE,uBAAKC,UAAWC,GACd,sBAAID,UAAWC,EAAAA,SAAf,aACA,uBAAKD,UAAWC,GACd,uBAAKC,IAAKC,EAAAA,EAASC,IAAI,KACvB,2BACE,oCACA,+DACA,yBAAG,gBAAC,EAAAC,KAAD,CAAMC,GAAE,WAAR,qBCqCb,EA5CiB,SAAC,GAAc,IACxBC,EADuB,EAAXC,KACAC,eAElB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,UAAWH,EAAKI,YAAYC,QACjC,2BAASZ,UAAS,SAChB,uBAAKA,UAAS,gBACZ,0BAAQA,UAAS,iBACf,sBAAIA,UAAS,gBAAmBO,EAAKI,YAAYC,OACjD,uBAAKZ,UAAS,eACZ,qBAAGA,UAAS,eAAiB,wBAAMa,SAAUN,EAAKI,YAAYG,MAAOP,EAAKI,YAAYG,OACtF,qBAAGd,UAAS,mBAAqB,gBAAC,EAAAK,KAAD,CAAMC,GAAE,KAAQC,EAAKI,YAAYI,aAGtE,0BAAQf,UAAS,aACf,gBAAC,KAAD,CAAOgB,KAAMT,EAAKI,YAAYM,OAAS,QAEzC,uBAAKjB,UAAS,iBAAoBkB,wBAAyB,CAAEC,OAAQZ,EAAKa,QAC1E,0BAAQpB,UAAS,mBAEnB,gBAAC,EAAD","sources":["webpack://neu-brew-design/./src/components/Author/index.module.scss","webpack://neu-brew-design/./src/components/Author/author.js","webpack://neu-brew-design/./src/templates/blog-post.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var authorItem = \"index-module--authorItem--3q8Kn\";\nexport var authorBody = \"index-module--authorBody--1FImI\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as styles from \"../Author/index.module.scss\"\nimport Profile from \"../../images/profile.jpg\"\n\nconst Author = () => {\n  return (\n    <div className={styles.authorItem}>\n      <h3 className={styles.heading}>この記事を書いた人</h3>\n      <div className={styles.authorBody}>\n        <img src={Profile} alt=\"\" />\n        <div>\n          <h4>Haruka</h4>\n          <p>デザインとコーディングのメモ。生活と読書、思考の記録を書いています。</p>\n          <p><Link to={`/about/`}>詳しいプロフィールをみる</Link></p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Author","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Emoji from \"react-emoji-render\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Author from \"../components/Author/author\"\n\nconst BlogPost = ({ data }) => {\n  const post = data.markdownRemark\n\n  return (\n    <Layout>\n      <Seo pagetitle={post.frontmatter.title} />\n      <article className={`entry`}>\n        <div className={`entry__inner`}>\n          <header className={`entry__header`}>\n            <h1 className={`entry__title`}>{post.frontmatter.title}</h1>\n            <div className={`entry__meta`}>\n              <p className={`entry__date`}><time dateTime={post.frontmatter.date}>{post.frontmatter.date}</time></p>\n              <p className={`entry__category`}><Link to={`/`}>{post.frontmatter.category}</Link></p>\n            </div>\n          </header>\n          <figure className={`thumbnail`} >\n            <Emoji text={post.frontmatter.emoji || \"📝\"} />\n          </figure>\n          <div className={`entry__content`} dangerouslySetInnerHTML={{ __html: post.html }} />\n          <footer className={`entry__footer`}></footer>\n        </div>\n        <Author />\n      </article>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery($slug: String!){\n  markdownRemark(frontmatter: {slug: {eq: $slug}}\n    ) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMM D YYYY\")\n        category\n        slug\n        tags\n        emoji\n      }\n      tableOfContents\n    }\n  }`\n\nexport default BlogPost"],"names":["authorItem","authorBody","className","styles","src","Profile","alt","Link","to","post","data","markdownRemark","pagetitle","frontmatter","title","dateTime","date","category","text","emoji","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}